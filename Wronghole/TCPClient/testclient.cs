using System;
using System.Collections;
using System.Net.Security;
using System.Net.Sockets;
using System.Security.Authentication;
using System.Text;
using System.Security.Cryptography.X509Certificates;

namespace TCPClient
{
    public class SslTcpClient
    {
        private static readonly Hashtable certificateErrors = new Hashtable();
        public string Ip { get; set; }
        public int Port { get; set; }
        public X509Certificate2 Cert = new X509Certificate2();
        static X509Certificate2Collection clientCertificate = new X509Certificate2Collection();

        public SslTcpClient(string ip, int port, Byte[] cert)
        {
            Ip = ip;
            Cert.Import(cert);
            clientCertificate.Add(Cert);
            Port = port;
        }
        // The following method is invoked by the RemoteCertificateValidationDelegate.
        public static bool ValidateServerCertificate(
              object sender,
              X509Certificate certificate,
              X509Chain chain,
              SslPolicyErrors sslPolicyErrors)
        {
            return true;
        }

        public void RunClient()
        {
            // Create a TCP/IP client socket.
            // machineName is the host running the server application.
            TcpClient client = new TcpClient(Ip, Port);
            Console.WriteLine("Client connected.");
            // Create an SSL stream that will close the client's stream.
            SslStream sslStream = new SslStream(
                client.GetStream(),
                false,
                new RemoteCertificateValidationCallback(ValidateServerCertificate),
                null
                );
            // The server name must match the name on the server certificate.
            try
            {
                sslStream.AuthenticateAsClient(Ip, clientCertificate, enabledSslProtocols: SslProtocols.Tls12, checkCertificateRevocation: true);
            }
            catch (AuthenticationException e)
            {
                Console.WriteLine("Exception: {0}", e.Message);
                if (e.InnerException != null)
                {
                    Console.WriteLine("Inner exception: {0}", e.InnerException.Message);
                }
                Console.WriteLine("Authentication failed - closing the connection.");
                client.Close();
                return;
            }
            char[] trim = { '<', 'E', 'O', 'F', '>' };
            clicommandHandler handle = new clicommandHandler();
            while (true)
            {

                // Read message from the server.
                string serverMessage = ReadMessage(sslStream).TrimEnd(trim);
                Console.WriteLine("Command from server: {0}", serverMessage);
                Console.WriteLine("Sending result to server.");
                string json = handle.FindCommand(serverMessage);
                Console.WriteLine(json);
                SendMessage(sslStream, json);
                //SendMessage(sslStream, serverMessage);
                sslStream.Flush();
            }
            // Close the client connection.
            //client.Close();
            //Console.WriteLine("Client closed.");
        }

        static void SendMessage(SslStream sslStream, string result)
        {
            // Set timeouts for write to 5 seconds.
            sslStream.WriteTimeout = 5000;

            // Write a message to the client.
            byte[] message = Encoding.UTF8.GetBytes(result + "<EOF>");
            sslStream.Write(message);
            sslStream.Flush();
        }

        static string ReadMessage(SslStream sslStream)
        {
            // Read the  message sent by the server.
            // The end of the message is signaled using the
            // "<EOF>" marker.
            byte[] buffer = new byte[2048];
            StringBuilder messageData = new StringBuilder();
            int bytes = -1;
            do
            {
                bytes = sslStream.Read(buffer, 0, buffer.Length);

                // Use Decoder class to convert from bytes to UTF8
                // in case a character spans two buffers.
                Decoder decoder = Encoding.UTF8.GetDecoder();
                char[] chars = new char[decoder.GetCharCount(buffer, 0, bytes)];
                decoder.GetChars(buffer, 0, bytes, chars, 0);
                messageData.Append(chars);
                // Check for EOF.
                if (messageData.ToString().IndexOf("<EOF>") != -1)
                {
                    break;
                }
            } while (bytes != 0);

            return messageData.ToString();
        }
        private static void DisplayUsage()
        {
            Console.WriteLine("To start the client specify:");
            Console.WriteLine("clientsertificate IP port");
            Environment.Exit(1);
        }
        public static int Main(string[] args)
        {
            //if (args == null || args.Length < 3)
            //{
            //    DisplayUsage();
            // }
            // User can specify the machine name and server name.
            // Server name must match the name on the server's certificate.
            string[] hex = { "2D","2D","2D","2D","2D","42","45","47","49","4E","20",
                "43","45","52","54","49","46","49","43","41","54","45","2D","2D","2D",
                "2D","2D","0A","4D","49","49","46","45","6A","43","43","41","76","6F",
                "43","41","57","55","77","44","51","59","4A","4B","6F","5A","49","68",
                "76","63","4E","41","51","45","4C","42","51","41","77","57","54","45",
                "4C","4D","41","6B","47","41","31","55","45","42","68","4D","43","51",
                "56","55","78","45","7A","41","52","42","67","4E","56","0A","42","41",
                "67","4D","43","6C","4E","76","62","57","55","74","55","33","52","68",
                "64","47","55","78","49","54","41","66","42","67","4E","56","42","41",
                "6F","4D","47","45","6C","75","64","47","56","79","62","6D","56","30",
                "49","46","64","70","5A","47","64","70","64","48","4D","67","55","48",
                "52","35","49","45","78","30","0A","5A","44","45","53","4D","42","41",
                "47","41","31","55","45","41","77","77","4A","4D","54","49","33","4C",
                "6A","41","75","4D","43","34","78","4D","42","34","58","44","54","45",
                "35","4D","54","49","79","4D","54","41","30","4D","7A","51","79","4F",
                "56","6F","58","44","54","49","77","4D","54","49","79","4D","44","41",
                "30","0A","4D","7A","51","79","4F","56","6F","77","52","54","45","4C",
                "4D","41","6B","47","41","31","55","45","42","68","4D","43","51","56",
                "55","78","45","7A","41","52","42","67","4E","56","42","41","67","4D",
                "43","6C","4E","76","62","57","55","74","55","33","52","68","64","47",
                "55","78","49","54","41","66","42","67","4E","56","0A","42","41","6F",
                "4D","47","45","6C","75","64","47","56","79","62","6D","56","30","49",
                "46","64","70","5A","47","64","70","64","48","4D","67","55","48","52",
                "35","49","45","78","30","5A","44","43","43","41","69","49","77","44",
                "51","59","4A","4B","6F","5A","49","68","76","63","4E","41","51","45",
                "42","42","51","41","44","0A","67","67","49","50","41","44","43","43",
                "41","67","6F","43","67","67","49","42","41","4E","4F","54","34","55",
                "46","48","4D","47","69","77","57","52","75","58","39","4D","65","4B",
                "61","52","6F","74","38","53","6D","4A","65","74","68","73","39","64",
                "6B","41","34","78","51","62","69","50","2B","59","69","45","61","64",
                "0A","70","63","37","56","64","30","48","2B","68","7A","59","74","69",
                "74","6B","79","64","50","43","6C","50","73","43","43","52","68","37",
                "2F","42","6E","4C","6A","62","74","56","50","6B","57","38","42","41",
                "57","2F","79","45","6D","39","6A","77","35","6B","57","51","2B","4F",
                "54","55","4C","31","6D","31","6F","7A","67","0A","2B","4F","69","54",
                "32","46","2B","4D","7A","59","64","55","36","37","35","6B","37","69",
                "32","64","74","77","36","69","56","4D","77","49","53","6F","38","73",
                "4A","41","6C","49","72","54","72","55","72","31","58","4A","34","59",
                "75","47","57","69","66","2B","72","33","4A","4A","56","4C","6F","56",
                "78","63","66","42","0A","4A","33","46","55","59","67","71","51","2F",
                "51","79","38","7A","36","38","4A","4C","4C","39","30","30","51","42",
                "36","6E","50","32","30","52","53","79","6A","2B","73","66","35","5A",
                "37","55","51","30","47","38","72","44","50","65","37","6B","6C","33",
                "72","51","33","5A","4B","4A","39","5A","38","63","54","4F","35","0A",
                "64","6C","4A","6F","67","59","38","63","71","36","75","67","31","44",
                "52","55","69","71","65","4E","74","61","36","6B","35","58","48","36",
                "42","4A","43","58","42","77","74","58","72","79","39","73","2F","6E",
                "4A","6F","59","6E","37","74","37","5A","50","43","62","79","51","4F",
                "42","74","6A","2B","58","70","6E","4F","0A","59","46","45","42","78",
                "30","31","6E","66","59","57","61","4B","49","4F","30","72","45","6A",
                "6B","41","35","4F","47","2F","76","55","42","71","44","33","52","79",
                "79","58","73","33","48","41","6B","54","2F","4D","64","41","68","6A",
                "6D","6D","67","6A","6D","48","71","58","71","6F","55","6D","79","42",
                "6E","57","4F","0A","63","46","43","77","37","4B","5A","2F","6C","74",
                "34","6B","45","5A","66","66","6C","71","30","65","55","70","4A","6F",
                "5A","54","67","7A","69","64","55","6B","2F","71","46","4B","56","56",
                "6C","38","6B","69","4A","6E","6C","4E","78","58","32","53","6A","6E",
                "45","64","4A","70","4D","49","4F","6E","62","76","38","54","0A","67",
                "6C","48","45","43","52","4B","79","73","61","38","69","5A","76","6E",
                "67","32","62","48","75","78","6B","4D","64","67","35","41","53","73",
                "61","52","70","38","62","30","59","6F","69","4E","7A","35","4D","69",
                "4A","6A","38","78","39","76","49","50","76","49","63","52","46","37",
                "2B","54","65","68","7A","53","6C","0A","73","35","50","52","33","34",
                "6A","42","77","41","6D","5A","4F","72","44","53","42","52","74","75",
                "4D","49","33","77","57","4D","44","52","35","43","78","63","47","48",
                "53","48","45","6A","72","4D","4F","4C","52","39","30","31","6A","43",
                "71","64","75","68","50","6C","39","69","44","4F","31","74","63","52",
                "42","44","0A","33","65","43","56","49","54","58","70","70","30","5A",
                "66","47","61","30","38","50","2B","43","7A","49","4D","79","63","68",
                "71","36","48","6F","4B","4B","6E","47","37","42","5A","43","78","61",
                "79","48","4E","43","49","31","4A","67","78","44","39","2F","53","77",
                "74","4D","37","4D","51","44","36","31","4D","64","6C","0A","34","75",
                "72","51","59","74","65","6F","2F","43","30","7A","4E","6A","69","6A",
                "58","77","4D","4F","35","66","65","37","69","66","58","2B","54","63",
                "38","46","7A","78","48","67","6F","6E","4A","2B","35","49","30","63",
                "71","52","69","31","49","71","48","6D","68","47","57","77","78","5A",
                "66","2F","41","67","4D","42","0A","41","41","45","77","44","51","59",
                "4A","4B","6F","5A","49","68","76","63","4E","41","51","45","4C","42",
                "51","41","44","67","67","49","42","41","4B","6F","51","68","50","31",
                "50","50","66","55","6A","56","62","53","75","55","6D","4D","46","54",
                "55","64","6B","6D","38","2B","72","30","49","6A","74","62","7A","46",
                "4D","0A","2F","76","30","77","45","35","33","4D","78","50","6C","4F",
                "64","68","68","77","4A","64","64","69","58","6C","4E","71","77","66",
                "6B","39","6E","71","69","6F","4F","4E","32","66","66","32","73","77",
                "6B","6F","63","75","77","34","52","4A","70","4A","50","57","71","31",
                "38","5A","61","6C","2B","6C","43","42","59","69","0A","2F","4E","58",
                "6B","79","36","46","4C","68","70","75","36","70","57","52","4F","51",
                "38","56","76","36","37","6D","7A","74","72","69","44","77","45","34",
                "4B","6E","6E","6C","6B","34","76","54","35","37","6A","78","53","57",
                "53","31","30","37","62","70","73","74","64","47","6D","78","6A","63",
                "34","69","48","74","54","0A","72","35","4A","62","6B","4C","70","77",
                "38","79","2B","57","47","56","7A","72","58","51","49","48","2B","4E",
                "77","41","51","67","54","65","33","71","56","37","70","6C","71","32",
                "41","32","6C","44","53","4F","52","48","79","65","6C","4E","46","4B",
                "71","2F","7A","63","45","30","6D","73","44","70","39","2F","4E","68",
                "0A","32","46","4E","36","72","56","43","2B","45","44","30","62","31",
                "52","72","4C","32","6A","36","54","43","33","58","6E","61","4D","73",
                "53","7A","38","78","2B","4A","6C","38","58","63","39","47","54","71",
                "56","76","6B","75","50","51","38","71","57","4D","68","61","61","4F",
                "43","54","2B","4F","78","66","45","68","6F","0A","73","56","38","77",
                "55","44","43","41","62","6F","7A","6D","62","57","38","46","51","51",
                "6E","4B","54","4D","70","75","67","4E","76","74","56","77","71","37",
                "34","32","44","71","61","34","48","70","63","55","2F","56","4E","4C",
                "53","67","52","39","52","70","73","48","41","76","69","44","76","77",
                "2F","6C","66","76","0A","44","6B","37","35","32","63","47","52","6D",
                "72","66","76","41","38","43","47","46","48","78","6C","46","64","78",
                "33","51","62","56","49","47","4E","37","66","30","37","62","6A","75",
                "38","34","42","68","45","68","39","5A","79","62","44","71","4B","6E",
                "54","59","57","68","71","50","6B","76","6B","42","4F","51","7A","0A",
                "38","63","72","4E","47","4D","7A","39","44","78","73","4A","71","4F",
                "46","68","6E","46","56","63","67","59","5A","2B","2B","42","78","41",
                "2B","50","65","44","6D","49","41","4B","46","68","56","53","45","47",
                "41","45","6F","6D","6F","78","53","75","59","72","77","32","48","34",
                "6D","7A","4B","53","6A","4A","47","4B","0A","63","4E","39","53","57",
                "61","38","79","6B","38","42","64","45","39","31","61","67","68","62",
                "62","48","72","73","50","61","61","35","68","37","51","4C","44","68",
                "45","78","30","79","63","43","68","63","71","62","46","68","75","53",
                "44","38","67","36","4F","56","33","69","51","62","5A","53","30","66",
                "44","76","69","0A","73","76","79","56","70","41","6D","34","79","4E",
                "79","5A","56","58","4B","42","64","4F","71","6A","69","78","32","71",
                "6E","76","36","64","30","78","4A","77","4B","4E","42","6F","35","58",
                "6B","78","45","63","61","69","4F","34","74","77","61","78","34","55",
                "74","67","4A","31","78","59","5A","31","35","49","52","6A","0A","32",
                "6F","72","5A","2B","38","41","41","54","72","55","52","44","30","70",
                "4F","66","78","4E","77","71","78","6C","30","68","66","46","4A","32",
                "38","75","43","73","61","4F","65","62","2F","4F","4B","52","62","63",
                "46","30","77","67","30","38","68","41","6D","41","31","64","74","69",
                "6F","52","64","53","4E","39","47","0A","59","49","79","57","7A","6E",
                "69","6F","0A","2D","2D","2D","2D","2D","45","4E","44","20","43","45",
                "52","54","49","46","49","43","41","54","45","2D","2D","2D","2D","2D","0A" };
            Byte[] raw = new byte[hex.Length];
            for(int i = 0; i < hex.Length; ++i)
            {
                raw[i] = Convert.ToByte(hex[i], 16);
            }
            SslTcpClient c = new SslTcpClient("192.168.192.1", 1234, raw);
            c.RunClient();
            return 0;
        }
    }
}